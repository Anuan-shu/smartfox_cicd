name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build-and-validate:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        shell: bash
        working-directory: mirco_service_fox
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Go环境
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: 缓存 Go 依赖
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: 下载 Go 模块依赖
        env:
          GOPROXY: https://proxy.golang.org,direct
        run: |
          for d in gateway experiment-service user-service notification-service submission-service; do
            echo "==> go mod download in $d"
            (cd "$d" && go mod download)
          done

      - name: Go Build (gateway)
        run: |
          cd gateway
          go build ./...

      - name: Go Build (experiment-service)
        run: |
          cd experiment-service
          go build ./...

      - name: Go Build (user-service)
        run: |
          cd user-service
          go build ./...

      - name: Go Build (notification-service)
        run: |
          cd notification-service
          go build ./...

      - name: Go Build (submission-service)
        run: |
          cd submission-service
          go build ./...

      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Python deps (judge-service)
        run: |
          cd judge-service
          python -m pip install -U pip
          pip install -r requirements.txt
          python - <<'PY'
          import flask
          print('Flask version:', flask.__version__)
          PY

      # Frontend build: Node.js setup + npm ci + build
      - name: 设置Node环境
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: smartfox_front/package-lock.json

      - name: 安装前端依赖并构建
        run: |
          cd ..
          cd smartfox_front
          npm ci
          CI=false npm run build

      - name: 构建docker镜像 (syntax/metadata check)
        uses: docker/setup-buildx-action@v3

      - name: 构建docker镜像
        run: |
          docker build -t gateway:ci ./gateway
          docker build -t experiment-service:ci ./experiment-service
          docker build -t user-service:ci ./user-service
          docker build -t notification-service:ci ./notification-service
          docker build -t submission-service:ci ./submission-service
          docker build -t judge-service:ci ./judge-service
          # frontend image (path out of mirco_service_fox)
          cd ..
          docker build -t smartfox-front:ci ./smartfox_front

      - name: Set up KinD
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: smartfox-ci

      - name: Deploy to KinD and run smoke tests
        run: |
          chmod +x .github/scripts/kind-deploy-and-test.sh
          .github/scripts/kind-deploy-and-test.sh
      - name: E2E smoke
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          chmod +x .github/scripts/smoke-e2e.sh
          .github/scripts/smoke-e2e.sh
      - name: Postman tests
        run: |
          chmod +x .github/scripts/run-newman.sh
          .github/scripts/run-newman.sh
